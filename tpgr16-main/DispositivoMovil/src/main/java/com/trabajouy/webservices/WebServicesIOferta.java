
package com.trabajouy.webservices;

import jakarta.jws.WebMethod;
import jakarta.jws.WebParam;
import jakarta.jws.WebResult;
import jakarta.jws.WebService;
import jakarta.jws.soap.SOAPBinding;
import jakarta.xml.bind.annotation.XmlSeeAlso;
import jakarta.xml.ws.Action;
import jakarta.xml.ws.FaultAction;


/**
 * This class was generated by the XML-WS Tools.
 * XML-WS Tools 4.0.0
 * Generated source version: 3.0
 * 
 */
@WebService(name = "WebServicesIOferta", targetNamespace = "http://webservices/")
@SOAPBinding(style = SOAPBinding.Style.RPC)
@XmlSeeAlso({
    ObjectFactory.class
})
public interface WebServicesIOferta {


    /**
     * 
     * @param arg0
     * @return
     *     returns com.trabajouy.webservices.DtOfertaArray
     * @throws UsuarioNoExisteException_Exception
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://webservices/WebServicesIOferta/obtenerOfertasConfirmadasRequest", output = "http://webservices/WebServicesIOferta/obtenerOfertasConfirmadasResponse", fault = {
        @FaultAction(className = UsuarioNoExisteException_Exception.class, value = "http://webservices/WebServicesIOferta/obtenerOfertasConfirmadas/Fault/UsuarioNoExisteException")
    })
    public DtOfertaArray obtenerOfertasConfirmadas(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0)
        throws UsuarioNoExisteException_Exception
    ;

    /**
     * 
     * @param arg0
     * @return
     *     returns com.trabajouy.webservices.DtPostulacionArray
     * @throws NoPoseePostulacionesException_Exception
     * @throws UsuarioNoExisteException_Exception
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://webservices/WebServicesIOferta/obtenerPostulacionesRequest", output = "http://webservices/WebServicesIOferta/obtenerPostulacionesResponse", fault = {
        @FaultAction(className = UsuarioNoExisteException_Exception.class, value = "http://webservices/WebServicesIOferta/obtenerPostulaciones/Fault/UsuarioNoExisteException"),
        @FaultAction(className = NoPoseePostulacionesException_Exception.class, value = "http://webservices/WebServicesIOferta/obtenerPostulaciones/Fault/NoPoseePostulacionesException")
    })
    public DtPostulacionArray obtenerPostulaciones(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0)
        throws NoPoseePostulacionesException_Exception, UsuarioNoExisteException_Exception
    ;

    /**
     * 
     * @param arg0
     * @return
     *     returns com.trabajouy.webservices.DtOfertaArray
     * @throws UsuarioNoExisteException_Exception
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://webservices/WebServicesIOferta/obtenerOfertasIngresadasRequest", output = "http://webservices/WebServicesIOferta/obtenerOfertasIngresadasResponse", fault = {
        @FaultAction(className = UsuarioNoExisteException_Exception.class, value = "http://webservices/WebServicesIOferta/obtenerOfertasIngresadas/Fault/UsuarioNoExisteException")
    })
    public DtOfertaArray obtenerOfertasIngresadas(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0)
        throws UsuarioNoExisteException_Exception
    ;

    /**
     * 
     * @param arg0
     * @return
     *     returns com.trabajouy.webservices.DtOfertaArray
     * @throws UsuarioNoExisteException_Exception
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://webservices/WebServicesIOferta/obtenerOfertasRequest", output = "http://webservices/WebServicesIOferta/obtenerOfertasResponse", fault = {
        @FaultAction(className = UsuarioNoExisteException_Exception.class, value = "http://webservices/WebServicesIOferta/obtenerOfertas/Fault/UsuarioNoExisteException")
    })
    public DtOfertaArray obtenerOfertas(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0)
        throws UsuarioNoExisteException_Exception
    ;

    /**
     * 
     * @return
     *     returns com.trabajouy.webservices.DtKeyWordArray
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://webservices/WebServicesIOferta/obtenerKeyWordsRequest", output = "http://webservices/WebServicesIOferta/obtenerKeyWordsResponse")
    public DtKeyWordArray obtenerKeyWords();

    /**
     * 
     * @param arg0
     * @param arg1
     * @return
     *     returns com.trabajouy.webservices.DtPaquetePubArray
     * @throws TipoPubNoExisteException_Exception
     * @throws UsuarioNoExisteException_Exception
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://webservices/WebServicesIOferta/obtenerPaquetesRequest", output = "http://webservices/WebServicesIOferta/obtenerPaquetesResponse", fault = {
        @FaultAction(className = UsuarioNoExisteException_Exception.class, value = "http://webservices/WebServicesIOferta/obtenerPaquetes/Fault/UsuarioNoExisteException"),
        @FaultAction(className = TipoPubNoExisteException_Exception.class, value = "http://webservices/WebServicesIOferta/obtenerPaquetes/Fault/TipoPubNoExisteException")
    })
    public DtPaquetePubArray obtenerPaquetes(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0,
        @WebParam(name = "arg1", partName = "arg1")
        String arg1)
        throws TipoPubNoExisteException_Exception, UsuarioNoExisteException_Exception
    ;

    /**
     * 
     * @param arg0
     * @return
     *     returns com.trabajouy.webservices.DtOfertaArray
     * @throws UsuarioNoExisteException_Exception
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://webservices/WebServicesIOferta/obtenerOfertasFinalizadasRequest", output = "http://webservices/WebServicesIOferta/obtenerOfertasFinalizadasResponse", fault = {
        @FaultAction(className = UsuarioNoExisteException_Exception.class, value = "http://webservices/WebServicesIOferta/obtenerOfertasFinalizadas/Fault/UsuarioNoExisteException")
    })
    public DtOfertaArray obtenerOfertasFinalizadas(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0)
        throws UsuarioNoExisteException_Exception
    ;

    /**
     * 
     * @param arg0
     * @return
     *     returns com.trabajouy.webservices.DtOfertaArray
     * @throws NoPoseePostulacionesException_Exception
     * @throws UsuarioNoExisteException_Exception
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://webservices/WebServicesIOferta/obtenerOfertasPostuladasRequest", output = "http://webservices/WebServicesIOferta/obtenerOfertasPostuladasResponse", fault = {
        @FaultAction(className = UsuarioNoExisteException_Exception.class, value = "http://webservices/WebServicesIOferta/obtenerOfertasPostuladas/Fault/UsuarioNoExisteException"),
        @FaultAction(className = NoPoseePostulacionesException_Exception.class, value = "http://webservices/WebServicesIOferta/obtenerOfertasPostuladas/Fault/NoPoseePostulacionesException")
    })
    public DtOfertaArray obtenerOfertasPostuladas(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0)
        throws NoPoseePostulacionesException_Exception, UsuarioNoExisteException_Exception
    ;

    /**
     * 
     * @param arg0
     * @return
     *     returns com.trabajouy.webservices.DtPaquetePub
     * @throws PaqueteNoExisteException_Exception
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://webservices/WebServicesIOferta/obtenerPaqueteCompraRequest", output = "http://webservices/WebServicesIOferta/obtenerPaqueteCompraResponse", fault = {
        @FaultAction(className = PaqueteNoExisteException_Exception.class, value = "http://webservices/WebServicesIOferta/obtenerPaqueteCompra/Fault/PaqueteNoExisteException")
    })
    public DtPaquetePub obtenerPaqueteCompra(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0)
        throws PaqueteNoExisteException_Exception
    ;

    /**
     * 
     * @param arg0
     * @return
     *     returns com.trabajouy.webservices.DtPaquetePubArray
     * @throws UsuarioNoExisteException_Exception
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://webservices/WebServicesIOferta/obtenerPaquetesValidosRequest", output = "http://webservices/WebServicesIOferta/obtenerPaquetesValidosResponse", fault = {
        @FaultAction(className = UsuarioNoExisteException_Exception.class, value = "http://webservices/WebServicesIOferta/obtenerPaquetesValidos/Fault/UsuarioNoExisteException")
    })
    public DtPaquetePubArray obtenerPaquetesValidos(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0)
        throws UsuarioNoExisteException_Exception
    ;

    /**
     * 
     * @param arg0
     * @return
     *     returns com.trabajouy.webservices.DtTipoPub
     * @throws TipoPubNoExisteException_Exception
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://webservices/WebServicesIOferta/obtenerTipoPublicacionRequest", output = "http://webservices/WebServicesIOferta/obtenerTipoPublicacionResponse", fault = {
        @FaultAction(className = TipoPubNoExisteException_Exception.class, value = "http://webservices/WebServicesIOferta/obtenerTipoPublicacion/Fault/TipoPubNoExisteException")
    })
    public DtTipoPub obtenerTipoPublicacion(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0)
        throws TipoPubNoExisteException_Exception
    ;

    /**
     * 
     * @param arg0
     * @return
     *     returns com.trabajouy.webservices.DtOfertaArray
     * @throws UsuarioNoExisteException_Exception
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://webservices/WebServicesIOferta/obtenerOfertasRechazadasRequest", output = "http://webservices/WebServicesIOferta/obtenerOfertasRechazadasResponse", fault = {
        @FaultAction(className = UsuarioNoExisteException_Exception.class, value = "http://webservices/WebServicesIOferta/obtenerOfertasRechazadas/Fault/UsuarioNoExisteException")
    })
    public DtOfertaArray obtenerOfertasRechazadas(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0)
        throws UsuarioNoExisteException_Exception
    ;

    /**
     * 
     * @param arg0
     * @return
     *     returns com.trabajouy.webservices.DtPaquetePub
     * @throws PaqueteNoExisteException_Exception
     * @throws TipoPubNoExisteException_Exception
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://webservices/WebServicesIOferta/obtenerPaqueteRequest", output = "http://webservices/WebServicesIOferta/obtenerPaqueteResponse", fault = {
        @FaultAction(className = TipoPubNoExisteException_Exception.class, value = "http://webservices/WebServicesIOferta/obtenerPaquete/Fault/TipoPubNoExisteException"),
        @FaultAction(className = PaqueteNoExisteException_Exception.class, value = "http://webservices/WebServicesIOferta/obtenerPaquete/Fault/PaqueteNoExisteException")
    })
    public DtPaquetePub obtenerPaquete(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0)
        throws PaqueteNoExisteException_Exception, TipoPubNoExisteException_Exception
    ;

    /**
     * 
     * @param arg0
     * @param arg1
     * @return
     *     returns com.trabajouy.webservices.DtOfertaArray
     * @throws UsuarioNoExisteException_Exception
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://webservices/WebServicesIOferta/busquedaOfertasRequest", output = "http://webservices/WebServicesIOferta/busquedaOfertasResponse", fault = {
        @FaultAction(className = UsuarioNoExisteException_Exception.class, value = "http://webservices/WebServicesIOferta/busquedaOfertas/Fault/UsuarioNoExisteException")
    })
    public DtOfertaArray busquedaOfertas(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0,
        @WebParam(name = "arg1", partName = "arg1")
        StringArray arg1)
        throws UsuarioNoExisteException_Exception
    ;

    /**
     * 
     * @param arg0
     * @return
     *     returns com.trabajouy.webservices.DtOferta
     * @throws TipoPubNoExisteException_Exception
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://webservices/WebServicesIOferta/obtenerDtOfertaRequest", output = "http://webservices/WebServicesIOferta/obtenerDtOfertaResponse", fault = {
        @FaultAction(className = TipoPubNoExisteException_Exception.class, value = "http://webservices/WebServicesIOferta/obtenerDtOferta/Fault/TipoPubNoExisteException")
    })
    public DtOferta obtenerDtOferta(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0)
        throws TipoPubNoExisteException_Exception
    ;

    /**
     * 
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://webservices/WebServicesIOferta/healthCheckRequest", output = "http://webservices/WebServicesIOferta/healthCheckResponse")
    public String healthCheck();

    /**
     * 
     * @param arg0
     * @return
     *     returns com.trabajouy.webservices.DtPaqPubArray
     * @throws PaqueteNoExisteException_Exception
     * @throws TipoPubNoExisteException_Exception
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://webservices/WebServicesIOferta/obtenerPublicacionesPaquetesRequest", output = "http://webservices/WebServicesIOferta/obtenerPublicacionesPaquetesResponse", fault = {
        @FaultAction(className = PaqueteNoExisteException_Exception.class, value = "http://webservices/WebServicesIOferta/obtenerPublicacionesPaquetes/Fault/PaqueteNoExisteException"),
        @FaultAction(className = TipoPubNoExisteException_Exception.class, value = "http://webservices/WebServicesIOferta/obtenerPublicacionesPaquetes/Fault/TipoPubNoExisteException")
    })
    public DtPaqPubArray obtenerPublicacionesPaquetes(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0)
        throws PaqueteNoExisteException_Exception, TipoPubNoExisteException_Exception
    ;

    /**
     * 
     * @return
     *     returns com.trabajouy.webservices.DtTipoPubArray
     * @throws TipoPubNoExisteException_Exception
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://webservices/WebServicesIOferta/obtenerTiposPublicacionRequest", output = "http://webservices/WebServicesIOferta/obtenerTiposPublicacionResponse", fault = {
        @FaultAction(className = TipoPubNoExisteException_Exception.class, value = "http://webservices/WebServicesIOferta/obtenerTiposPublicacion/Fault/TipoPubNoExisteException")
    })
    public DtTipoPubArray obtenerTiposPublicacion()
        throws TipoPubNoExisteException_Exception
    ;

    /**
     * 
     * @return
     *     returns com.trabajouy.webservices.DtOfertaArray
     * @throws UsuarioNoExisteException_Exception
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://webservices/WebServicesIOferta/obtenerOfertasConfirmadasSinFiltroRequest", output = "http://webservices/WebServicesIOferta/obtenerOfertasConfirmadasSinFiltroResponse", fault = {
        @FaultAction(className = UsuarioNoExisteException_Exception.class, value = "http://webservices/WebServicesIOferta/obtenerOfertasConfirmadasSinFiltro/Fault/UsuarioNoExisteException")
    })
    public DtOfertaArray obtenerOfertasConfirmadasSinFiltro()
        throws UsuarioNoExisteException_Exception
    ;

    /**
     * 
     * @param arg0
     * @param arg1
     */
    @WebMethod
    @Action(input = "http://webservices/WebServicesIOferta/actualizarEstadoDeOfertaRequest", output = "http://webservices/WebServicesIOferta/actualizarEstadoDeOfertaResponse")
    public void actualizarEstadoDeOferta(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0,
        @WebParam(name = "arg1", partName = "arg1")
        EstadoOferta arg1);

    /**
     * 
     * @param arg0
     * @return
     *     returns com.trabajouy.webservices.DtOfertaArray
     * @throws UsuarioNoExisteException_Exception
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://webservices/WebServicesIOferta/obtenerOfertasConfirmadasConFiltroRequest", output = "http://webservices/WebServicesIOferta/obtenerOfertasConfirmadasConFiltroResponse", fault = {
        @FaultAction(className = UsuarioNoExisteException_Exception.class, value = "http://webservices/WebServicesIOferta/obtenerOfertasConfirmadasConFiltro/Fault/UsuarioNoExisteException")
    })
    public DtOfertaArray obtenerOfertasConfirmadasConFiltro(
        @WebParam(name = "arg0", partName = "arg0")
        StringArray arg0)
        throws UsuarioNoExisteException_Exception
    ;

    /**
     * 
     * @return
     *     returns com.trabajouy.webservices.DtPaquetePubArray
     * @throws PaqueteNoExisteException_Exception
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://webservices/WebServicesIOferta/obtenerPaquetesRegistradosRequest", output = "http://webservices/WebServicesIOferta/obtenerPaquetesRegistradosResponse", fault = {
        @FaultAction(className = PaqueteNoExisteException_Exception.class, value = "http://webservices/WebServicesIOferta/obtenerPaquetesRegistrados/Fault/PaqueteNoExisteException")
    })
    public DtPaquetePubArray obtenerPaquetesRegistrados()
        throws PaqueteNoExisteException_Exception
    ;

    /**
     * 
     * @param arg0
     * @return
     *     returns boolean
     * @throws UsuarioNoExisteException_Exception
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://webservices/WebServicesIOferta/estaVencidaRequest", output = "http://webservices/WebServicesIOferta/estaVencidaResponse", fault = {
        @FaultAction(className = UsuarioNoExisteException_Exception.class, value = "http://webservices/WebServicesIOferta/estaVencida/Fault/UsuarioNoExisteException")
    })
    public boolean estaVencida(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0)
        throws UsuarioNoExisteException_Exception
    ;

    /**
     * 
     * @param arg0
     * @param arg1
     * @param arg10
     * @param arg2
     * @param arg3
     * @param arg4
     * @param arg5
     * @param arg6
     * @param arg7
     * @param arg8
     * @param arg9
     * @throws CostoMayorACeroExcepcion_Exception
     * @throws FechaInvalidaException_Exception
     * @throws OfertaLaboralYaExisteException_Exception
     * @throws PaqueteNoExisteException_Exception
     * @throws PaqueteNoTieneMasTipoPubExcepcion_Exception
     * @throws TipoPubNoExisteException_Exception
     * @throws UsuarioNoExisteException_Exception
     */
    @WebMethod
    @Action(input = "http://webservices/WebServicesIOferta/ingresarDatosOfertaLaboralConPaqueteRequest", output = "http://webservices/WebServicesIOferta/ingresarDatosOfertaLaboralConPaqueteResponse", fault = {
        @FaultAction(className = TipoPubNoExisteException_Exception.class, value = "http://webservices/WebServicesIOferta/ingresarDatosOfertaLaboralConPaquete/Fault/TipoPubNoExisteException"),
        @FaultAction(className = OfertaLaboralYaExisteException_Exception.class, value = "http://webservices/WebServicesIOferta/ingresarDatosOfertaLaboralConPaquete/Fault/OfertaLaboralYaExisteException"),
        @FaultAction(className = FechaInvalidaException_Exception.class, value = "http://webservices/WebServicesIOferta/ingresarDatosOfertaLaboralConPaquete/Fault/FechaInvalidaException"),
        @FaultAction(className = UsuarioNoExisteException_Exception.class, value = "http://webservices/WebServicesIOferta/ingresarDatosOfertaLaboralConPaquete/Fault/UsuarioNoExisteException"),
        @FaultAction(className = CostoMayorACeroExcepcion_Exception.class, value = "http://webservices/WebServicesIOferta/ingresarDatosOfertaLaboralConPaquete/Fault/CostoMayorACeroExcepcion"),
        @FaultAction(className = PaqueteNoTieneMasTipoPubExcepcion_Exception.class, value = "http://webservices/WebServicesIOferta/ingresarDatosOfertaLaboralConPaquete/Fault/PaqueteNoTieneMasTipoPubExcepcion"),
        @FaultAction(className = PaqueteNoExisteException_Exception.class, value = "http://webservices/WebServicesIOferta/ingresarDatosOfertaLaboralConPaquete/Fault/PaqueteNoExisteException")
    })
    public void ingresarDatosOfertaLaboralConPaquete(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0,
        @WebParam(name = "arg1", partName = "arg1")
        String arg1,
        @WebParam(name = "arg2", partName = "arg2")
        byte[] arg2,
        @WebParam(name = "arg3", partName = "arg3")
        String arg3,
        @WebParam(name = "arg4", partName = "arg4")
        float arg4,
        @WebParam(name = "arg5", partName = "arg5")
        String arg5,
        @WebParam(name = "arg6", partName = "arg6")
        String arg6,
        @WebParam(name = "arg7", partName = "arg7")
        StringArray arg7,
        @WebParam(name = "arg8", partName = "arg8")
        String arg8,
        @WebParam(name = "arg9", partName = "arg9")
        String arg9,
        @WebParam(name = "arg10", partName = "arg10")
        String arg10)
        throws CostoMayorACeroExcepcion_Exception, FechaInvalidaException_Exception, OfertaLaboralYaExisteException_Exception, PaqueteNoExisteException_Exception, PaqueteNoTieneMasTipoPubExcepcion_Exception, TipoPubNoExisteException_Exception, UsuarioNoExisteException_Exception
    ;

    /**
     * 
     * @param arg0
     * @param arg1
     * @param arg2
     * @param arg3
     * @param arg4
     * @param arg5
     * @param arg6
     * @param arg7
     * @param arg8
     * @param arg9
     * @throws CostoMayorACeroExcepcion_Exception
     * @throws FechaInvalidaException_Exception
     * @throws OfertaLaboralYaExisteException_Exception
     * @throws TipoPubNoExisteException_Exception
     * @throws UsuarioNoExisteException_Exception
     */
    @WebMethod
    @Action(input = "http://webservices/WebServicesIOferta/ingresarDatosOfertaLaboralSinPaqueteRequest", output = "http://webservices/WebServicesIOferta/ingresarDatosOfertaLaboralSinPaqueteResponse", fault = {
        @FaultAction(className = TipoPubNoExisteException_Exception.class, value = "http://webservices/WebServicesIOferta/ingresarDatosOfertaLaboralSinPaquete/Fault/TipoPubNoExisteException"),
        @FaultAction(className = OfertaLaboralYaExisteException_Exception.class, value = "http://webservices/WebServicesIOferta/ingresarDatosOfertaLaboralSinPaquete/Fault/OfertaLaboralYaExisteException"),
        @FaultAction(className = FechaInvalidaException_Exception.class, value = "http://webservices/WebServicesIOferta/ingresarDatosOfertaLaboralSinPaquete/Fault/FechaInvalidaException"),
        @FaultAction(className = UsuarioNoExisteException_Exception.class, value = "http://webservices/WebServicesIOferta/ingresarDatosOfertaLaboralSinPaquete/Fault/UsuarioNoExisteException"),
        @FaultAction(className = CostoMayorACeroExcepcion_Exception.class, value = "http://webservices/WebServicesIOferta/ingresarDatosOfertaLaboralSinPaquete/Fault/CostoMayorACeroExcepcion")
    })
    public void ingresarDatosOfertaLaboralSinPaquete(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0,
        @WebParam(name = "arg1", partName = "arg1")
        String arg1,
        @WebParam(name = "arg2", partName = "arg2")
        byte[] arg2,
        @WebParam(name = "arg3", partName = "arg3")
        String arg3,
        @WebParam(name = "arg4", partName = "arg4")
        float arg4,
        @WebParam(name = "arg5", partName = "arg5")
        String arg5,
        @WebParam(name = "arg6", partName = "arg6")
        String arg6,
        @WebParam(name = "arg7", partName = "arg7")
        StringArray arg7,
        @WebParam(name = "arg8", partName = "arg8")
        String arg8,
        @WebParam(name = "arg9", partName = "arg9")
        String arg9)
        throws CostoMayorACeroExcepcion_Exception, FechaInvalidaException_Exception, OfertaLaboralYaExisteException_Exception, TipoPubNoExisteException_Exception, UsuarioNoExisteException_Exception
    ;

    /**
     * 
     * @param arg0
     * @param arg1
     * @return
     *     returns com.trabajouy.webservices.DtOfertaArray
     * @throws UsuarioNoExisteException_Exception
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://webservices/WebServicesIOferta/obtenerOfertasConfirmadasPorEmpresaYKeywordsRequest", output = "http://webservices/WebServicesIOferta/obtenerOfertasConfirmadasPorEmpresaYKeywordsResponse", fault = {
        @FaultAction(className = UsuarioNoExisteException_Exception.class, value = "http://webservices/WebServicesIOferta/obtenerOfertasConfirmadasPorEmpresaYKeywords/Fault/UsuarioNoExisteException")
    })
    public DtOfertaArray obtenerOfertasConfirmadasPorEmpresaYKeywords(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0,
        @WebParam(name = "arg1", partName = "arg1")
        StringArray arg1)
        throws UsuarioNoExisteException_Exception
    ;

}
