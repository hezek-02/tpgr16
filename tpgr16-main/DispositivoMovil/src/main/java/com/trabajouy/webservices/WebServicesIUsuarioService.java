
package com.trabajouy.webservices;

import java.io.FileInputStream;
import java.io.IOException;
import java.io.InputStream;
import java.net.MalformedURLException;
import java.net.URL;
import java.util.Properties;

import javax.xml.namespace.QName;
import jakarta.xml.ws.Service;
import jakarta.xml.ws.WebEndpoint;
import jakarta.xml.ws.WebServiceClient;
import jakarta.xml.ws.WebServiceException;
import jakarta.xml.ws.WebServiceFeature;


/**
 * This class was generated by the XML-WS Tools.
 * XML-WS Tools 4.0.0
 * Generated source version: 3.0
 * 
 */
@WebServiceClient(name = "WebServicesIUsuarioService", targetNamespace = "http://webservices/", wsdlLocation = "http://localhost:9132/usuario?wsdl")
public class WebServicesIUsuarioService
    extends Service
{

    private final static URL WEBSERVICESIUSUARIOSERVICE_WSDL_LOCATION;
    private final static WebServiceException WEBSERVICESIUSUARIOSERVICE_EXCEPTION;
    private final static QName WEBSERVICESIUSUARIOSERVICE_QNAME = new QName("http://webservices/", "WebServicesIUsuarioService");

    static {
        URL url = null;
        WebServiceException e = null;
        try {
            url = new URL(obtenerURLDesdeConfiguracion()+"?wsdl");
        } catch (MalformedURLException ex) {
            e = new WebServiceException(ex);
        }
        WEBSERVICESIUSUARIOSERVICE_WSDL_LOCATION = url;
        WEBSERVICESIUSUARIOSERVICE_EXCEPTION = e;
    }

    public WebServicesIUsuarioService() {
        super(__getWsdlLocation(), WEBSERVICESIUSUARIOSERVICE_QNAME);
    }

    public WebServicesIUsuarioService(WebServiceFeature... features) {
        super(__getWsdlLocation(), WEBSERVICESIUSUARIOSERVICE_QNAME, features);
    }

    public WebServicesIUsuarioService(URL wsdlLocation) {
        super(wsdlLocation, WEBSERVICESIUSUARIOSERVICE_QNAME);
    }

    public WebServicesIUsuarioService(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, WEBSERVICESIUSUARIOSERVICE_QNAME, features);
    }

    public WebServicesIUsuarioService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public WebServicesIUsuarioService(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     * 
     * @return
     *     returns WebServicesIUsuario
     */
    @WebEndpoint(name = "WebServicesIUsuarioPort")
    public WebServicesIUsuario getWebServicesIUsuarioPort() {
        return super.getPort(new QName("http://webservices/", "WebServicesIUsuarioPort"), WebServicesIUsuario.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link jakarta.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns WebServicesIUsuario
     */
    @WebEndpoint(name = "WebServicesIUsuarioPort")
    public WebServicesIUsuario getWebServicesIUsuarioPort(WebServiceFeature... features) {
        return super.getPort(new QName("http://webservices/", "WebServicesIUsuarioPort"), WebServicesIUsuario.class, features);
    }

    private static URL __getWsdlLocation() {
        if (WEBSERVICESIUSUARIOSERVICE_EXCEPTION!= null) {
            throw WEBSERVICESIUSUARIOSERVICE_EXCEPTION;
        }
        return WEBSERVICESIUSUARIOSERVICE_WSDL_LOCATION;
    }
    
    @SuppressWarnings("unused")
	private static String obtenerURLDesdeConfiguracion() {
        Properties properties = new Properties();

        try (InputStream input = new FileInputStream("/ens/devel01/tpgr16/tpgr16/config.properties")) {
            if (input != null) {
                properties.load(input);
            } else {
                System.err.println("No se pudo cargar el archivo de configuraci√≥n. FALLO SERVICE USU");
            }
        } catch (IOException e) {
            e.printStackTrace();
        }

        String wsIP = properties.getProperty("ws_ip");
        String wsPort = properties.getProperty("ws_port");
        System.out.println(wsIP);

        return "http://" + wsIP + ":" + wsPort + "/usuario";
    }

}
